# generate unroll_sum.cpp according to the function definations in unroll_sum.h

import re

header = """
//Generated by unroll_gen.py
#include<iostream>
using namespace std;

int common_algo(int *arr, int len)
{
    int total = 0;
    for (int i = 0; i < len; i++)
        total += arr[i];
    return total;
}
"""

func = """
int unroll_algo_$NUM$(int *arr, int len)
{
    int total[$NUM$] = {0};
    for (int i = 0; i < len; i+=$NUM$)
    {
        $REPEAT$
    }
    return common_algo(total, $NUM$);
}
"""

with open("unroll_sum.cpp", mode="w") as cpp:
    cpp.write(header);
    with open("unroll_sum.h") as h:
        for l in h.readlines():
            if(re.search("unroll_algo_[1-9]\d*", l)):
                repeat_times = int(re.search("[1-9]\d*", l).group())
                repeat_body = '\n'.join(["        total[{}] += arr[{}];".format(i, "i+"+str(i)) for i in range(repeat_times)])
                func_body = re.sub("\$NUM\$",str(repeat_times),func)
                func_body = re.sub("\$REPEAT\$", repeat_body, func_body)
                cpp.write(func_body)


    
